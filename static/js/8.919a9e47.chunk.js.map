{"version":3,"file":"static/js/8.919a9e47.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdateProfile.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginUpdateProfile = memo(({ kcContext, i18n, ...props }: { kcContext: KcContextBase.LoginUpdateProfile; i18n: I18n } & KcProps) => {\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    const { url, user, messagesPerField, isAppInitiatedAction } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, ...props }}\n            doFetchDefaultThemeResources={true}\n            headerNode={msg(\"loginProfileTitle\")}\n            formNode={\n                <form id=\"kc-update-profile-form\" className={cx(props.kcFormClass)} action={url.loginAction} method=\"post\">\n                    {user.editUsernameAllowed && (\n                        <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"username\", props.kcFormGroupErrorClass))}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"username\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"username\")}\n                                </label>\n                            </div>\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    defaultValue={user.username ?? \"\"}\n                                    className={cx(props.kcInputClass)}\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"email\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"email\" className={cx(props.kcLabelClass)}>\n                                {msg(\"email\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input type=\"text\" id=\"email\" name=\"email\" defaultValue={user.email ?? \"\"} className={cx(props.kcInputClass)} />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"firstName\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"firstName\" className={cx(props.kcLabelClass)}>\n                                {msg(\"firstName\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input\n                                type=\"text\"\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                defaultValue={user.firstName ?? \"\"}\n                                className={cx(props.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"lastName\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"lastName\" className={cx(props.kcLabelClass)}>\n                                {msg(\"lastName\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" defaultValue={user.lastName ?? \"\"} className={cx(props.kcInputClass)} />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(props.kcFormOptionsClass)}>\n                            <div className={cx(props.kcFormOptionsWrapperClass)} />\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(props.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={cx(props.kcButtonClass, props.kcButtonPrimaryClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={cx(props.kcButtonClass, props.kcButtonDefaultClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={cx(\n                                        props.kcButtonClass,\n                                        props.kcButtonPrimaryClass,\n                                        props.kcButtonBlockClass,\n                                        props.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default LoginUpdateProfile;\n"],"names":["LoginUpdateProfile","memo","_a","kcContext","i18n","props","__rest","cx","useCssAndCx","msg","msgStr","url","user","messagesPerField","isAppInitiatedAction","React","Template","Object","doFetchDefaultThemeResources","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","editUsernameAllowed","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","type","name","defaultValue","username","_b","kcInputClass","email","_c","firstName","_d","lastName","_e","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","value","kcButtonBlockClass"],"sourceRoot":""}