{"version":3,"file":"static/js/8.ffbc5b24.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdateProfile.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"tss-react\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginUpdateProfile = memo(({ kcContext, i18n, ...props }: { kcContext: KcContextBase.LoginUpdateProfile; i18n: I18n } & KcProps) => {\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    const { url, user, messagesPerField, isAppInitiatedAction } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, ...props }}\n            doFetchDefaultThemeResources={true}\n            headerNode={msg(\"loginProfileTitle\")}\n            formNode={\n                <form id=\"kc-update-profile-form\" className={cx(props.kcFormClass)} action={url.loginAction} method=\"post\">\n                    {user.editUsernameAllowed && (\n                        <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"username\", props.kcFormGroupErrorClass))}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"username\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"username\")}\n                                </label>\n                            </div>\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    defaultValue={user.username ?? \"\"}\n                                    className={cx(props.kcInputClass)}\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"email\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"email\" className={cx(props.kcLabelClass)}>\n                                {msg(\"email\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input type=\"text\" id=\"email\" name=\"email\" defaultValue={user.email ?? \"\"} className={cx(props.kcInputClass)} />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"firstName\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"firstName\" className={cx(props.kcLabelClass)}>\n                                {msg(\"firstName\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input\n                                type=\"text\"\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                defaultValue={user.firstName ?? \"\"}\n                                className={cx(props.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"lastName\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"lastName\" className={cx(props.kcLabelClass)}>\n                                {msg(\"lastName\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" defaultValue={user.lastName ?? \"\"} className={cx(props.kcInputClass)} />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(props.kcFormOptionsClass)}>\n                            <div className={cx(props.kcFormOptionsWrapperClass)} />\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(props.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={cx(props.kcButtonClass, props.kcButtonPrimaryClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={cx(props.kcButtonClass, props.kcButtonDefaultClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={cx(\n                                        props.kcButtonClass,\n                                        props.kcButtonPrimaryClass,\n                                        props.kcButtonBlockClass,\n                                        props.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default LoginUpdateProfile;\n"],"names":["LoginUpdateProfile","memo","kcContext","i18n","props","cx","useCssAndCx","msg","msgStr","url","user","messagesPerField","isAppInitiatedAction","React","Template","doFetchDefaultThemeResources","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","editUsernameAllowed","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","type","name","defaultValue","username","kcInputClass","email","firstName","lastName","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","value","kcButtonBlockClass"],"sourceRoot":""}