{"version":3,"file":"static/js/8.1891b21e.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdateProfile.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nexport type LoginUpdateProfile = KcProps & {\n    kcContext: KcContextBase.LoginUpdateProfile;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst LoginUpdateProfile = memo((props: LoginUpdateProfile) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    const { url, user, messagesPerField, isAppInitiatedAction } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"loginProfileTitle\")}\n            formNode={\n                <form id=\"kc-update-profile-form\" className={cx(kcProps.kcFormClass)} action={url.loginAction} method=\"post\">\n                    {user.editUsernameAllowed && (\n                        <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"username\", kcProps.kcFormGroupErrorClass))}>\n                            <div className={cx(kcProps.kcLabelWrapperClass)}>\n                                <label htmlFor=\"username\" className={cx(kcProps.kcLabelClass)}>\n                                    {msg(\"username\")}\n                                </label>\n                            </div>\n                            <div className={cx(kcProps.kcInputWrapperClass)}>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    defaultValue={user.username ?? \"\"}\n                                    className={cx(kcProps.kcInputClass)}\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"email\", kcProps.kcFormGroupErrorClass))}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"email\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"email\")}\n                            </label>\n                        </div>\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input type=\"text\" id=\"email\" name=\"email\" defaultValue={user.email ?? \"\"} className={cx(kcProps.kcInputClass)} />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"firstName\", kcProps.kcFormGroupErrorClass))}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"firstName\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"firstName\")}\n                            </label>\n                        </div>\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input\n                                type=\"text\"\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                defaultValue={user.firstName ?? \"\"}\n                                className={cx(kcProps.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"lastName\", kcProps.kcFormGroupErrorClass))}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"lastName\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"lastName\")}\n                            </label>\n                        </div>\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input\n                                type=\"text\"\n                                id=\"lastName\"\n                                name=\"lastName\"\n                                defaultValue={user.lastName ?? \"\"}\n                                className={cx(kcProps.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(kcProps.kcFormOptionsClass)}>\n                            <div className={cx(kcProps.kcFormOptionsWrapperClass)} />\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(kcProps.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={cx(kcProps.kcButtonClass, kcProps.kcButtonPrimaryClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={cx(kcProps.kcButtonClass, kcProps.kcButtonDefaultClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={cx(\n                                        kcProps.kcButtonClass,\n                                        kcProps.kcButtonPrimaryClass,\n                                        kcProps.kcButtonBlockClass,\n                                        kcProps.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default LoginUpdateProfile;\n"],"names":["LoginUpdateProfile","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","__rest","cx","useCssAndCx","msg","msgStr","url","user","messagesPerField","isAppInitiatedAction","React","Object","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","editUsernameAllowed","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","type","name","defaultValue","username","_a","kcInputClass","email","_b","firstName","_c","lastName","_d","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","value","kcButtonBlockClass"],"sourceRoot":""}