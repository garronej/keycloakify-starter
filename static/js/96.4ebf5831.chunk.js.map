{"version":3,"file":"static/js/96.4ebf5831.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdatePassword.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"tss-react\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginUpdatePassword = memo(({ kcContext, i18n, ...props }: { kcContext: KcContextBase.LoginUpdatePassword; i18n: I18n } & KcProps) => {\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    const { url, messagesPerField, isAppInitiatedAction, username } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, ...props }}\n            doFetchDefaultThemeResources={true}\n            headerNode={msg(\"updatePasswordTitle\")}\n            formNode={\n                <form id=\"kc-passwd-update-form\" className={cx(props.kcFormClass)} action={url.loginAction} method=\"post\">\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        value={username}\n                        readOnly={true}\n                        autoComplete=\"username\"\n                        style={{ display: \"none\" }}\n                    />\n                    <input type=\"password\" id=\"password\" name=\"password\" autoComplete=\"current-password\" style={{ display: \"none\" }} />\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"password\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"password-new\" className={cx(props.kcLabelClass)}>\n                                {msg(\"passwordNew\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input\n                                type=\"password\"\n                                id=\"password-new\"\n                                name=\"password-new\"\n                                autoFocus\n                                autoComplete=\"new-password\"\n                                className={cx(props.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"password-confirm\", props.kcFormGroupErrorClass))}>\n                        <div className={cx(props.kcLabelWrapperClass)}>\n                            <label htmlFor=\"password-confirm\" className={cx(props.kcLabelClass)}>\n                                {msg(\"passwordConfirm\")}\n                            </label>\n                        </div>\n                        <div className={cx(props.kcInputWrapperClass)}>\n                            <input\n                                type=\"password\"\n                                id=\"password-confirm\"\n                                name=\"password-confirm\"\n                                autoComplete=\"new-password\"\n                                className={cx(props.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(props.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(props.kcFormOptionsClass)}>\n                            <div className={cx(props.kcFormOptionsWrapperClass)}>\n                                {isAppInitiatedAction && (\n                                    <div className=\"checkbox\">\n                                        <label>\n                                            <input type=\"checkbox\" id=\"logout-sessions\" name=\"logout-sessions\" value=\"on\" checked />\n                                            {msgStr(\"logoutOtherSessions\")}\n                                        </label>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(props.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={cx(props.kcButtonClass, props.kcButtonPrimaryClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={cx(props.kcButtonClass, props.kcButtonDefaultClass, props.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={cx(\n                                        props.kcButtonClass,\n                                        props.kcButtonPrimaryClass,\n                                        props.kcButtonBlockClass,\n                                        props.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default LoginUpdatePassword;\n"],"names":["LoginUpdatePassword","memo","kcContext","i18n","props","cx","useCssAndCx","msg","msgStr","url","messagesPerField","isAppInitiatedAction","username","React","Template","doFetchDefaultThemeResources","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","type","name","value","readOnly","autoComplete","style","display","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","autoFocus","kcInputClass","kcFormOptionsClass","kcFormOptionsWrapperClass","checked","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","defaultValue","kcButtonDefaultClass","kcButtonBlockClass"],"sourceRoot":""}