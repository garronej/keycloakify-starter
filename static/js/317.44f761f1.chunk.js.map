{"version":3,"file":"static/js/317.44f761f1.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginOtp.tsx"],"sourcesContent":["import React, { useEffect, memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { headInsert } from \"../tools/headInsert\";\nimport { pathJoin } from \"../../bin/tools/pathJoin\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nexport type LoginOtpProps = KcProps & {\n    kcContext: KcContextBase.LoginOtp;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst LoginOtp = memo((props: LoginOtpProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { otpLogin, url } = kcContext;\n\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    useEffect(() => {\n        let isCleanedUp = false;\n\n        headInsert({\n            \"type\": \"javascript\",\n            \"src\": pathJoin(kcContext.url.resourcesCommonPath, \"node_modules/jquery/dist/jquery.min.js\")\n        }).then(() => {\n            if (isCleanedUp) return;\n\n            evaluateInlineScript();\n        });\n\n        return () => {\n            isCleanedUp = true;\n        };\n    }, []);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"doLogIn\")}\n            formNode={\n                <form id=\"kc-otp-login-form\" className={cx(kcProps.kcFormClass)} action={url.loginAction} method=\"post\">\n                    {otpLogin.userOtpCredentials.length > 1 && (\n                        <div className={cx(kcProps.kcFormGroupClass)}>\n                            <div className={cx(kcProps.kcInputWrapperClass)}>\n                                {otpLogin.userOtpCredentials.map(otpCredential => (\n                                    <div key={otpCredential.id} className={cx(kcProps.kcSelectOTPListClass)}>\n                                        <input type=\"hidden\" value=\"${otpCredential.id}\" />\n                                        <div className={cx(kcProps.kcSelectOTPListItemClass)}>\n                                            <span className={cx(kcProps.kcAuthenticatorOtpCircleClass)} />\n                                            <h2 className={cx(kcProps.kcSelectOTPItemHeadingClass)}>{otpCredential.userLabel}</h2>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                    <div className={cx(kcProps.kcFormGroupClass)}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"otp\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"loginOtpOneTime\")}\n                            </label>\n                        </div>\n\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input id=\"otp\" name=\"otp\" autoComplete=\"off\" type=\"text\" className={cx(kcProps.kcInputClass)} autoFocus />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(kcProps.kcFormOptionsClass)}>\n                            <div className={cx(kcProps.kcFormOptionsWrapperClass)} />\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(kcProps.kcFormButtonsClass)}>\n                            <input\n                                className={cx(\n                                    kcProps.kcButtonClass,\n                                    kcProps.kcButtonPrimaryClass,\n                                    kcProps.kcButtonBlockClass,\n                                    kcProps.kcButtonLargeClass\n                                )}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                value={msgStr(\"doLogIn\")}\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\ndeclare const $: any;\n\nfunction evaluateInlineScript() {\n    $(document).ready(function () {\n        // Card Single Select\n        $(\".card-pf-view-single-select\").click(function (this: any) {\n            if ($(this).hasClass(\"active\")) {\n                $(this).removeClass(\"active\");\n                $(this).children().removeAttr(\"name\");\n            } else {\n                $(\".card-pf-view-single-select\").removeClass(\"active\");\n                $(\".card-pf-view-single-select\").children().removeAttr(\"name\");\n                $(this).addClass(\"active\");\n                $(this).children().attr(\"name\", \"selectedCredentialId\");\n            }\n        });\n\n        var defaultCred = $(\".card-pf-view-single-select\")[0];\n        if (defaultCred) {\n            defaultCred.click();\n        }\n    });\n}\n\nexport default LoginOtp;\n"],"names":["LoginOtp","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","__rest","otpLogin","url","cx","useCssAndCx","msg","msgStr","useEffect","isCleanedUp","headInsert","pathJoin","resourcesCommonPath","then","$","document","ready","click","this","hasClass","removeClass","children","removeAttr","addClass","attr","defaultCred","React","Object","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","userOtpCredentials","length","kcFormGroupClass","kcInputWrapperClass","map","otpCredential","key","kcSelectOTPListClass","type","value","kcSelectOTPListItemClass","kcAuthenticatorOtpCircleClass","kcSelectOTPItemHeadingClass","userLabel","kcLabelWrapperClass","htmlFor","kcLabelClass","name","autoComplete","kcInputClass","autoFocus","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass"],"sourceRoot":""}