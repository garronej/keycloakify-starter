{"version":3,"file":"static/js/96.5cdc4342.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdatePassword.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nexport type LoginUpdatePasswordProps = KcProps & {\n    kcContext: KcContextBase.LoginUpdatePassword;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst LoginUpdatePassword = memo((props: LoginUpdatePasswordProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { cx } = useCssAndCx();\n\n    const { msg, msgStr } = i18n;\n\n    const { url, messagesPerField, isAppInitiatedAction, username } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"updatePasswordTitle\")}\n            formNode={\n                <form id=\"kc-passwd-update-form\" className={cx(kcProps.kcFormClass)} action={url.loginAction} method=\"post\">\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        value={username}\n                        readOnly={true}\n                        autoComplete=\"username\"\n                        style={{ display: \"none\" }}\n                    />\n                    <input type=\"password\" id=\"password\" name=\"password\" autoComplete=\"current-password\" style={{ display: \"none\" }} />\n\n                    <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"password\", kcProps.kcFormGroupErrorClass))}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"password-new\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"passwordNew\")}\n                            </label>\n                        </div>\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input\n                                type=\"password\"\n                                id=\"password-new\"\n                                name=\"password-new\"\n                                autoFocus\n                                autoComplete=\"new-password\"\n                                className={cx(kcProps.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass, messagesPerField.printIfExists(\"password-confirm\", kcProps.kcFormGroupErrorClass))}>\n                        <div className={cx(kcProps.kcLabelWrapperClass)}>\n                            <label htmlFor=\"password-confirm\" className={cx(kcProps.kcLabelClass)}>\n                                {msg(\"passwordConfirm\")}\n                            </label>\n                        </div>\n                        <div className={cx(kcProps.kcInputWrapperClass)}>\n                            <input\n                                type=\"password\"\n                                id=\"password-confirm\"\n                                name=\"password-confirm\"\n                                autoComplete=\"new-password\"\n                                className={cx(kcProps.kcInputClass)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={cx(kcProps.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={cx(kcProps.kcFormOptionsClass)}>\n                            <div className={cx(kcProps.kcFormOptionsWrapperClass)}>\n                                {isAppInitiatedAction && (\n                                    <div className=\"checkbox\">\n                                        <label>\n                                            <input type=\"checkbox\" id=\"logout-sessions\" name=\"logout-sessions\" value=\"on\" checked />\n                                            {msgStr(\"logoutOtherSessions\")}\n                                        </label>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={cx(kcProps.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={cx(kcProps.kcButtonClass, kcProps.kcButtonPrimaryClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={cx(kcProps.kcButtonClass, kcProps.kcButtonDefaultClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={cx(\n                                        kcProps.kcButtonClass,\n                                        kcProps.kcButtonPrimaryClass,\n                                        kcProps.kcButtonBlockClass,\n                                        kcProps.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default LoginUpdatePassword;\n"],"names":["LoginUpdatePassword","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","__rest","cx","useCssAndCx","msg","msgStr","url","messagesPerField","isAppInitiatedAction","username","React","Object","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","type","name","value","readOnly","autoComplete","style","display","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","autoFocus","kcInputClass","kcFormOptionsClass","kcFormOptionsWrapperClass","checked","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","defaultValue","kcButtonDefaultClass","kcButtonBlockClass"],"sourceRoot":""}